@model BugTrackerV4.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Details";
}
@using Microsoft.AspNet.Identity
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css " />
</head>
<body>
    <h2>Details</h2>

    <div>
        <h4>Ticket</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.AssignedUser.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AssignedUser.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CreatorUser.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CreatorUser.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Project.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Project.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TicketPriority.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TicketPriority.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TicketStatus.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TicketStatus.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TicketType.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TicketType.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Created)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Created)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Updated)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Updated)
            </dd>
        </dl>
    </div>

    <h2> History</h2>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Editor
                </th>
                <th>
                    Change Date
                </th>
                <th>
                    Property
                </th>
                <th>
                    Changed From
                </th>
                <th>
                    Changed To
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.TicketHistories)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChangedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Property)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OldValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NewValue)
                    </td>
                </tr>
            }
        </tbody>

    </table>

    @{
        var userId = User.Identity.GetUserId();
        <p>
            @if (Model.Project.PMID == userId)
            { @Html.ActionLink("Assign Dev", "AssignDev", new { ticketId = Model.Id }) }
            @if (Model.Project.PMID == userId || User.IsInRole("Admin"))
            { @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) }
            @Html.ActionLink("Back to List", "Index")

        </p>
        if (User.IsInRole("Admin") || Model.CreatorUserId == userId || Model.AssignedUserId == userId || Model.Project.PMID == userId)
        {
            foreach (var att in Model.TicketAttachments)
            {
                if (att.FileUrl != "")
                {
                    <div class="row">
                        <img src=@Url.Content(att.FileUrl) class="img-responsive" />
                    </div>
                    <div class="row">
                        <p>@att.Description by @att.Users.FullName</p>
                    </div>
                }
            }
        }
        foreach (var comment in Model.TicketComments)
        {

            <div class="row">
                <div class="col-sm-3">
                    <p class="small-font">Posted at @comment.Created by @comment.User.FullName
                </div>
                <div class="col-sm-9"> @comment.Comment</div>
                @if (comment.User.Id == userId || User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Delete Comment", "Delete", "TicketComments", new { id = comment.Id }, null)
                    @Html.ActionLink("Edit Comment", "Edit", "TicketComments", new { id = comment.Id }, null)

                }
            </div>
        }


        using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))

        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="TicketId" value="@Model.Id" />
            <textarea name="comment" style="width:100%;border:solid .5px #333;" rows="5"></textarea>
                    <button type="submit" class="btn btn-default" style="float:right; margin-top:15px;">Submit Comment</button>
        }
        if (User.IsInRole("Admin") || Model.CreatorUserId == userId || Model.AssignedUserId == userId || Model.Project.PMID == userId)
        {
            using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="hidden" name="TicketId" value="@Model.Id" />
                        <textarea name="Description" style="width:100%;border:solid .5px #333;" rows="5"></textarea>
                        <input type="file" name="Image" id="fileUpload" onchange="loadFile(event)" class="form-control" required />
                        @*@Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TicketAttachments, "", new { @class = "text-danger" })*@
                        <div style="max-height:200px; max-width:200px">
                            @if (!string.IsNullOrWhiteSpace("Image"))
                    {
                                <h5><strong>Media preview</strong></h5>
                                <img class="img-responsive" id="output" />
                            }
                        </div>
                        <label for="file">Filename:</label>
                        <input type="file" name="file" id="filePath" onchange="loadFile(event)" class="form-control" />
                        <button type="submit" class="btn btn-default" style="float:right; margin-top:15px;">Submit Attachment</button>
                    </div>
                </div>
            }
        }
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
        <script src="~/Scripts/tinymce/tinymce.min.js"></script>
        <script type="text/javascript">
            $(function () {
                tinymce.init({
                    selector: '#Body'
                });
            });
        </script>
        <script>
            var loadFile = function (event) {
                var reader = new FileReader();
                reader.onload = function () {
                    var output = document.getElementById('output');
                    output.src = reader.result;
                };
                reader.readAsDataURL(event.target.files[0]);
            };
        </script>
        <script type="text/javascript" src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>

        <script>
            $(document).ready(function () {
                $('.table').DataTable();
            });</script>
    }
    </body>
</html>




